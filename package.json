{
  "name": "vscode-xml2",
  "displayName": "XML2",
  "description": "Dita support",
  "version": "0.21.6",
  "author": "User",
  "publisher": "User",
  "icon": "icons/dita_icon.png",
  "license": "EPL-2.0",
    "preview": true,
  "keywords": [
    "xml",
    "xsl",
    "xsd",
    "dtd"
  ],
  "xmlServer": {
    "version": "0.20.0"
  },
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": "limited",
      "restrictedConfigurations": [
        "xml.server.vmargs",
        "xml.validation.resolveExternalEntities",
        "xml.downloadExternalResources.enabled"
      ]
    }
  },
  "engines": {
    "vscode": "^1.52.0"
  },
  "activationEvents": [
    "onLanguage:xml",
    "onLanguage:xsl",
    "onCommand:xml.open.docs",
    "onCommand:xml.open.docs.home"
  ],
  "main": "./dist/extension",
  "scripts": {
    "preinstall": "npx npm-force-resolutions",
    "vscode:prepublish": "webpack --mode production",
    "compile": "webpack --mode none",
    "watch": "webpack --mode development --watch",
    "test-compile": "tsc -p ./",
    "pretest": "npm run test-compile",
    "test": "node ./out/test/runTest.js",
    "tslint": "./node_modules/.bin/tslint -p .",
    "build": "./node_modules/.bin/gulp build",
    "build-server": "./node_modules/.bin/gulp build_server"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/redhat-developer/vscode-xml"
  },
  "categories": [
    "Programming Languages",
    "Linters",
    "Formatters",
    "Snippets"
  ],
  "devDependencies": {
    "@types/fs-extra": "^8.1.2",
    "@types/glob": "^7.1.4",
    "@types/node": "^10.14.16",
    "@types/vscode": "^1.37.0",
    "@types/yauzl": "^2.9.1",
    "gulp": "^4.0.2",
    "gulp-rename": "^1.4.0",
    "gulp-tslint": "^8.1.3",
    "minimist": ">=1.2.6",
    "serialize-javascript": "^4.0.0",
    "ts-loader": "^6.0.1",
    "tslint": "^5.12.1",
    "typescript": "^3.4.1",
    "typescript-tslint-plugin": "^0.3.1",
    "vscode-test": "^1.2.0",
    "webpack": "^5.28.0",
    "webpack-cli": "^4.6.0"
  },
  "dependencies": {
    "@redhat-developer/vscode-redhat-telemetry": "0.4.2",
    "expand-home-dir": "^0.0.3",
    "find-java-home": "1.2.2",
    "fs-extra": "^8.1.0",
    "glob": "^7.1.4",
    "path-exists": "^4.0.0",
    "vscode-languageclient": "^7.0.0",
    "yauzl": "^2.10.0"
  },
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "XML",
      "properties": {
        "xml.server.vmargs": {
          "type": [
            "string",
            "null"
          ],
          "default": "-Xmx64M",
          "markdownDescription": "Specifies extra VM arguments used to launch the XML Language Server. Eg. use `-Xmx1G  -XX:+UseG1GC -XX:+UseStringDeduplication` to increase the heap size to 1GB and enable String deduplication with the G1 Garbage collector. Please refer to [this document](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22server-vm-arguments%22%7D%5D) for more information on the Java server arguments.",
          "scope": "window"
        },
        "xml.server.workDir": {
          "type": "string",
          "default": "~/.lemminx",
          "markdownDescription": "Set a custom folder path for cached XML Schemas. An absolute path is expected, although the `~` prefix (for the user home directory) is supported. Default is `~/.lemminx`. Please refer to the [cache documentation](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22server-cache-path%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.server.binary.args": {
          "type": "string",
          "markdownDescription": "Command line arguments to supply to the binary server when the binary server is being used. Takes into effect after relaunching VSCode. Please refer to [this website for the available options](https://www.graalvm.org/reference-manual/native-image/HostedvsRuntimeOptions/). For example, you can increase the maximum memory that the server can use to 1 GB by adding `-Xmx1g`",
          "scope": "machine"
        },
        "xml.downloadExternalResources.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Download external resources like referenced DTD, XSD. Default is `true`.",
          "scope": "window"
        },
        "xml.catalogs": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Register XML catalog files. See how to configure [XML catalog with XSD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-catalog-with-xsd%22%7D%5D) or [XML catalog with DTD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-catalog-with-dtd%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.fileAssociations": {
          "type": "array",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "pattern": {
                "type": "string",
                "markdownDescription": "File glob pattern. Example: `**/*.Format.ps1xml`\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob"
              },
              "systemId": {
                "type": "string",
                "description": "The path or URL to the XML schema (XSD or DTD)."
              }
            },
            "required": [
              "pattern",
              "systemId"
            ]
          },
          "markdownDescription": "Allows XML schemas/ DTD to be associated to file name patterns. Please refer to [XML file association with XSD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-file-association-with-xsd%22%7D%5D) or [XML file association with DTD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-file-association-with-dtd%22%7D%5D) for more information. \n\nExample:\n```json\n[{\n  \"pattern\": \"file1.xml\",\n  \"systemId\": \"path/to/file.xsd\"\n},\n{\n  \"pattern\": \"**/*.xsd\",\n  \"systemId\": \"http://www.w3.org/2001/XMLSchema.xsd\"\n}]\n```",
          "scope": "window"
        },
        "xml.format.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable ability to format document. Default is `true`.",
          "scope": "window"
        },
        "xml.format.preserveEmptyContent": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Preserve empty content/whitespace in a tag. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatpreserveemptycontent%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.completion.autoCloseTags": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable autoclosing of XML tags. Default is `true`. \n\nIMPORTANT: Turn off `#editor.autoClosingTags#` for this to work.",
          "scope": "window"
        },
        "xml.completion.autoCloseRemovesContent": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable the content of an element being removed when the element start tag is turned into a self-closing tag. The default setting is to remove the content. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22auto-close-removes-content%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xml.validation.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable all validation. Default is `true`.",
          "scope": "window"
        },
        "xml.validation.resolveExternalEntities": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable/disable resolve of external entities. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22resolve-external-entities%22%7D%5D) for more information. Disabled for untrusted workspaces",
          "scope": "window"
        },
        "xml.symbols.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable document symbols (Outline). Default is `true`. No symbols are given if `\"xml.symbols.enabled\": false`.",
          "scope": "window"
        },
        "xml.symbols.maxItemsComputed": {
          "type": "integer",
          "default": 5000,
          "markdownDescription": "The maximum number of outline symbols and folding regions computed (limited for performance reasons). Default is `5000`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Symbols%22%2C%22section%22%3A%22xmlsymbolsmaxitemscomputed%22%7D%5D) for more information."
        }        
      }
    },
    "configurationDefaults": {
      "[xml]": {
        "editor.autoClosingBrackets": "never",
        "files.trimFinalNewlines": true
      },
      "[xsl]": {
        "editor.autoClosingBrackets": "never",
        "files.trimFinalNewlines": true
      }
    },
    "commands": [
      {
        "command": "xml.open.docs.home",
        "title": "Open XML Documentation",
        "category": "XML"
      },
      {
        "command": "xml.validation.current.file",
        "title": "Revalidate current XML file",
        "category": "XML"
      },
      {
        "command": "xml.validation.all.files",
        "title": "Revalidate all opened XML files",
        "category": "XML"
      },
      {
        "command": "xml.command.bind.grammar",
        "title": "Bind to grammar/schema file",
        "category": "XML"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "xml.validation.current.file",
          "when": "editorLangId == xml"
        },
        {
          "command": "xml.command.bind.grammar",
          "when": "resourceFilename =~ /xml/ && editorIsOpen"
        }
      ]
    },
    "languages": [
      {
        "id": "xml",
        "extensions": [
          ".ent",
          ".mod"
        ]
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "package.json",
        "url": "./schemas/package.schema.json"
      }
    ]
  }
}
